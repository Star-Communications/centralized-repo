name: CI - Build Docker Image & Push to Container Registry

on:
  workflow_call:
    inputs:
      runs-on:
        description: "Runner to use for the job"
        type: string
        required: true

      project-name:
        description: "Name of the project"
        type: string
        required: true
    
    secrets:
      CONT_REG_USERNAME:
        description: "Username for the container registry"
        required: true

      CONT_REG_PASSWORD:
        description: "Password for the container registry"
        required: true

      ALL_REPOS_READONLY:
        description: "Read-only token for all repos"
        required: true

# disable permissions for all scopes (except for id-token)
permissions:
  id-token: write

jobs:
  build-and-push:
    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: Log in to private registry
        uses: docker/login-action@v3
        with:
          registry: harbor.star-com.net
          username: ${{ secrets.CONT_REG_USERNAME }}
          password: ${{ secrets.CONT_REG_PASSWORD }}

      - name: Check if Docker image exists in Harbor
        id: image-check
        run: |
          set -e
          IMAGE_EXISTS=$(curl -s -u "${{ secrets.CONT_REG_USERNAME }}:${{ secrets.CONT_REG_PASSWORD }}" \
            -H "Accept: application/vnd.docker.distribution.manifest.v2+json" \
            -f "https://harbor.star-com.net/v2/starcom/${{ inputs.project-name }}/manifests/${{ github.sha }}" \
            > /dev/null && echo "true" || echo "false")
          echo "exists=$IMAGE_EXISTS" >> $GITHUB_OUTPUT

      - name: Checkout code
        if: steps.image-check.outputs.exists == 'false'
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0 # needed for submodules to clone properly
          token: ${{ secrets.ALL_REPOS_READONLY }}

      - name: Set up Docker Buildx
        if: steps.image-check.outputs.exists == 'false'
        uses: docker/setup-buildx-action@v3

      - name: Test Harbor connectivity
        if: steps.image-check.outputs.exists == 'false'
        run: curl -v https://harbor.star-com.net/v2/_catalog || true

      - name: Build Docker image
        if: steps.image-check.outputs.exists == 'false'
        run: docker build -t harbor.star-com.net/starcom/${{ inputs.project-name }}:${{ github.sha }} -f ./docker-files/Dockerfile.${{ inputs.project-name }}.prod .

      - name: Push Docker image
        if: steps.image-check.outputs.exists == 'false'
        run: docker push harbor.star-com.net/starcom/${{ inputs.project-name }}:${{ github.sha }}
