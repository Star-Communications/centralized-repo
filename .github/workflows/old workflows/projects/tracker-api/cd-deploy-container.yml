# Deploy 'Tracker-API' (container) using release zip from S3
name: cd-deploy-container

on:
  workflow_dispatch:
    inputs:
      build-release-runner:
        description: "Runner that will build the project for the release"
        type: string
        required: false
        default: "ubuntu-latest"

      deployment-runner:
        description: "Runner(s) where will deploy the release (comma separated)"
        type: string
        required: true

      target-version:
        description: "Version to deploy (if not of latest)"
        required: false
        default: "latest"

jobs:
  # ---------- JOB ----------
  build-release:
    uses: ./.github/workflows/cd-prepare-release.yml
    with:
      build-release-runner: ${{ inputs.build-release-runner }}

  # ---------- JOB ----------
  # log the outputs of the previous job & set outputs for the next job
  set-vars:
    runs-on: ${{ inputs.deployment-runner }}

    needs: build-release

    outputs:
      project-folder-path: ${{ steps.set-output-vars.outputs.project-folder-path }}

    steps:
      - name: Set output variables for next job (depending on the runner's OS)
        id: set-output-vars
        shell: pwsh
        run: |
          if ("${{ runner.os }}" -eq 'Linux') {
            $projFolderPath = "/home/ubuntu/SC-TRACKER/INSTALLATION FILES/tracker-api"
          }
          else {
            $projFolderPath = "C:/SC-TRACKER/INSTALLATION FILES/tracker-api"
          }

          echo "project-folder-path=$projFolderPath" >> $env:GITHUB_OUTPUT
          echo "projFolderPath = $projFolderPath"

  # ---------- JOB ----------
  deploy-container:
    uses: Star-Communications/centralized-repo/.github/workflows/cd-deploy-container.yml@master
    needs: set-vars
    with:
      runs-on: ${{ inputs.deployment-runner }}
      target-version: ${{ inputs.target-version }}
      s3-bucket: "sc-releases-bucket"
      s3-prefix: "tracker-api"
      project-folder-path: "${{ needs.set-vars.outputs.project-folder-path }}"
      docker-compose-file-name: "docker-compose.tracker-api.prod.yml"
    secrets:
      AWS_ROLE_TO_ASSUME: "arn:aws:iam::977628787421:role/oidc-tracker-api-download-release-s3-role"
