# define a catch-all server block to handle domains that do not match "server_name" values below.
server {
    listen 80 default_server;
    listen 443 ssl default_server;

    ssl_certificate /etc/nginx/ssl/live/default_server/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/default_server/privkey.pem;

    return 444;
}

server {
    listen 80;
	server_name my-website1.com;
    # root /usr/share/nginx/html/;

    # "http://my-website1.com/.well-known/acme-challenge/" redirects (if it matches but DOESN'T find html/any file to return)
    location ~ /.well-known/acme-challenge{
        allow all;
        root /usr/share/nginx/html/letsencrypt;
    }

    # "http://my-website1.com/testing/" doesn't redirect & returns below (as it matches & finds html file to return)
    # NOTE: must create "testing" folder in "/nginx/public_html/" & create "index.html" file in it
    location ~ /testing {
        allow all;
        root /public_html;
    }

    location / {
        # root /public_html;
        # index  public.html;
        return 301 https://my-website1.com$request_uri;
    }
}

server {
     listen 443 ssl http2;
     server_name my-website1.com;

     server_tokens off;
     ssl_certificate /etc/nginx/ssl/live/my-website1.com/fullchain.pem;
     ssl_certificate_key /etc/nginx/ssl/live/my-website1.com/privkey.pem;
     ssl_dhparam /etc/nginx/dhparam/dhparam-2048.pem;
     
     ssl_buffer_size 8k;
     ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
     ssl_prefer_server_ciphers on;
     ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    location / {
        proxy_pass http://my-container1;
    }

    location /my-endpoint2/ {
        proxy_pass http://my-container2;
    }

    location /my-endpoint3/ {
        proxy_pass http://my-container3;
    }
}

# -----------------------------------------------------------

# REPEAT THE 2X SERVER BLOCKS ABOVE FOR EACH NEW WEBSITE (change "my-website1.com" to "my-website2.com" etc.)